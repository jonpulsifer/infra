name: "Terraform"
on:
  push:
    branches:
      - main
    paths:
      - argo/**
      - cloudflare/**
      - gcp/**
      - k8s/**.tf
      - unifi/**
      - vault/**
      - workspace/**
  pull_request:
    paths:
      - argo/**
      - cloudflare/**
      - gcp/**
      - k8s/**.tf
      - unifi/**
      - vault/**
      - workspace/**
  workflow_dispatch:
    inputs:
      regenerate_docs:
        description: 'Regenerate documentation for all Terraform modules'
        required: true
        type: boolean
        default: true

jobs:
  changed-directories:
    name: Get Changed Files
    runs-on: ubuntu-latest
    outputs:
      # Output a JSON string list of unique directories containing changed files matching the patterns
      directories: ${{ steps.changed-directories.outputs.all_changed_files }} 
      # Output 'true' or 'false' as a string
      any_changed: ${{ steps.changed-directories.outputs.any_changed }}
    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          fetch-depth: 0
      - name: Directories with Changes
        id: changed-directories
        uses: tj-actions/changed-files@v46
        with:
          dir_names: true
          json: true
          files: |
            **/*.tf
            **/*.lock.hcl

  validate:
    needs: [changed-directories]
    runs-on: ubuntu-latest
    if: needs.changed-directories.outputs.any_changed == 'true'
    strategy:
      fail-fast: false # Keep running other matrix jobs even if one fails
      matrix:
        dir: ${{ fromJSON(needs.changed-directories.outputs.directories) }}
    defaults:
      run:
        working-directory: ${{ matrix.dir }}
    steps:
      - name: Checkout
        uses: actions/checkout@v5
      - uses: hashicorp/setup-terraform@v3
      - name: Terraform fmt
        id: fmt
        run: terraform fmt -check
        continue-on-error: true
      - name: Terraform Init
        id: init
        run: terraform init -backend=false
      - name: Terraform Validate
        id: validate
        run: terraform validate

  docs:
    needs: [validate]
    runs-on: ubuntu-latest
    # Run IF:
    # 1. It's a push to main AND (validate succeeded OR validate was skipped because no files changed)
    # OR
    # 2. It's a manual dispatch AND the regenerate_docs input is true
    if: |
      always() && (
        (github.event_name == 'push' && github.ref == 'refs/heads/main' && (needs.validate.result == 'success' || needs.validate.result == 'skipped')) ||
        (github.event_name == 'workflow_dispatch' && github.event.inputs.regenerate_docs)
      )
    steps:
      - uses: actions/checkout@v5
        with:
          ref: main
      - name: Render terraform docs and push changes back to PR
        uses: terraform-docs/gh-actions@v1.4.1
        with:
          find-dir: .
          git-push: true
          git-commit-message: "docs: regenerate terraform documentation"