---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: prom-stack
  namespace: monitoring
spec:
  interval: 24h
  chart:
    spec:
      chart: kube-prometheus-stack
      version: 70.7.0
      sourceRef:
        kind: HelmRepository
        name: prometheus
        namespace: flux-system
      interval: 24h
  install:
    createNamespace: true
    remediation:
      retries: 5
  upgrade:
    remediation:
      retries: 5
  values:
    defaultRules:
      rules:
        etcd: false
        kubeControllerManager: false
        kubeProxy: false
        kubeSchedulerAlerting: false
    kubelet.enabled: false
    kubeControllerManager.enabled: false
    kubeEtcd.enabled: false
    kubeScheduler.enabled: false
    cleanPrometheusOperatorObjectNames: true
    prometheus:
      ingress:
        enabled: true
        annotations:
          cert-manager.io/cluster-issuer: ${CERT_CLUSTER_ISSUER}
          hajimari.io/appName: "Prometheus"
          hajimari.io/group: "Monitoring"
          hajimari.io/icon: torch
        hosts:
          - &prom prom.${SECRET_DOMAIN}
        tls:
          - secretName: *prom
            hosts:
              - *prom
      prometheusSpec:
        retention: 90d
        storageSpec:
          volumeClaimTemplate:
            spec:
              storageClassName: local-path
              accessModes: ["ReadWriteOnce"]
              resources:
                requests:
                  storage: 75Gi
    grafana:
      admin:
        existingSecret: grafana-admin-user
        userKey: user
        passwordKey: password
      grafana.ini:
        feature_toggles:
          publicDashboards: true
      plugins:
        - grafana-mqtt-datasource
      deleteDatasources:
        - name: Loki
          orgId: 1
      additionalDataSources:
        - name: Loki
          type: loki
          isDefault: false
          access: proxy
          url: https://loki.${SECRET_DOMAIN}
          orgId: 1
          version: 1
          jsonData:
            httpHeaderName1: "X-Scope-OrgID"
          secureJsonData:
            httpHeaderValue1: "1"
        - name: FlameBoss
          type: grafana-mqtt-datasource
          orgId: 1
          version: 1
          jsonData:
            tlsSkipVerify: true
            uri: tls://s4.myflameboss.com:8883
            username: ${SECRET_FLAMEBOSS_USERNAME}
          secureJsonData:
            password: ${SECRET_FLAMEBOSS_PASSWORD}
      dashboardProviders:
        dashboardproviders.yaml:
          apiVersion: 1
          providers:
            - name: "default"
              orgId: 1
              folder: ""
              type: file
              disableDeletion: false
              editable: true
              options:
                path: /var/lib/grafana/dashboards/default
      downloadDashboardsImage:
        repository: jonpulsifer/bashcurljq
        tag: latest
      dashboards:
        default:
          nginx-ingress:
            gnetId: 9614
            revision: 1
            datasource: Prometheus
          client-dpi:
            gnetId: 11310
            revision: 5
            datasource: Prometheus
          network-sites:
            gnetId: 11311
            revision: 5
            datasource: Prometheus
          usw-insights:
            gnetId: 11312
            revision: 9
            datasource: Prometheus
          usg-insights:
            gnetId: 11313
            revision: 9
            datasource: Prometheus
          uap-insights:
            gnetId: 11314
            revision: 10
            datasource: Prometheus
          client-insights:
            gnetId: 11315
            revision: 9
            datasource: Prometheus
      ingress:
        enabled: true
        annotations:
          cert-manager.io/cluster-issuer: ${CERT_CLUSTER_ISSUER}
          hajimari.io/appName: "Grafana"
          hajimari.io/group: "Monitoring"
          hajimari.io/icon: chart-line
        hosts:
          - &grafana grafana.${SECRET_DOMAIN}
        tls:
          - secretName: *grafana
            hosts:
              - *grafana
      persistence:
        enabled: true
        storageClassName: local-path
        size: 1Gi
    alertmanager:
      ingress:
        enabled: true
        annotations:
          cert-manager.io/cluster-issuer: ${CERT_CLUSTER_ISSUER}
          hajimari.io/appName: "Alert Manager"
          hajimari.io/group: "Monitoring"
          hajimari.io/icon: alert-circle
        hosts:
          - &am am.${SECRET_DOMAIN}
        tls:
          - secretName: *am
            hosts:
              - *am
    prometheus-node-exporter:
      prometheus:
        monitor:
          relabelings:
            - action: replace
              sourceLabels: [__meta_kubernetes_endpoint_node_name]
              targetLabel: instance
